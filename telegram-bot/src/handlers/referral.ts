import { Context } from 'telegraf'
import { APIService } from '../services/api.js'

const apiService = new APIService()

export const referralHandler = async (ctx: Context) => {
  try {
    const telegramId = ctx.from?.id.toString()
    
    if (!telegramId) {
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
      return
    }

    const [user, referralsData] = await Promise.all([
      apiService.getUserProfile(telegramId),
      apiService.getUserReferrals(telegramId)
    ])
    
    let referralText = `üéÅ *–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞*\n\n`
    referralText += `üí∞ *–í–∞—à–∞ –∫–æ–º–∏—Å—Å–∏—è: 50%* (–ª—É—á—à–µ —á–µ–º —É –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤!)\n\n`
    referralText += `üîó *–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥:*\n\`${user.referralCode}\`\n\n`
    
    const referralLink = `${process.env.FRONTEND_URL}/auth/register?ref=${user.referralCode}`
    referralText += `üåê *–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:*\n${referralLink}\n\n`
    
    referralText += `üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n`
    referralText += `üë• –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ: ${referralsData.count} —á–µ–ª.\n`
    referralText += `üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: ${referralsData.totalEarnings} ‚ÇΩ\n\n`

    if (referralsData.referrals && referralsData.referrals.length > 0) {
      referralText += `üë• *–í–∞—à–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã:*\n\n`
      
      referralsData.referrals.slice(0, 5).forEach((referral, index) => {
        referralText += `${index + 1}. ${referral.firstName}${referral.lastName ? ' ' + referral.lastName : ''}\n`
        referralText += `   üìÖ ${new Date(referral.createdAt).toLocaleDateString()}\n\n`
      })
      
      if (referralsData.referrals.length > 5) {
        referralText += `... –∏ –µ—â–µ ${referralsData.referrals.length - 5} —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤\n\n`
      }
    }

    referralText += `üí° *–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:*\n`
    referralText += `‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ\n`
    referralText += `‚Ä¢ –ü–æ–ª—É—á–∞–π—Ç–µ 50% —Å –∏—Ö –ø–µ—Ä–≤—ã—Ö –∑–∞—Ä–∞–±–æ—Ç–∫–æ–≤\n`
    referralText += `‚Ä¢ –í—ã–≤–æ–¥–∏—Ç–µ –¥–µ–Ω—å–≥–∏ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è\n`
    referralText += `‚Ä¢ –ë–µ–∑–ª–∏–º–∏—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤!`

    await ctx.reply(referralText, {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥', callback_data: `copy_${user.referralCode}` }],
          [{ text: 'üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π', switch_inline_query: `–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ Unpacker Clone! –ó–∞—Ä–∞–±–æ—Ç–æ–∫ –Ω–∞ —Ä–µ–∫–ª–∞–º–µ –∏ —Ç–æ–≤–∞—Ä–∞—Ö. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: ${referralLink}` }],
          [{ text: 'üìä –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', url: `${process.env.FRONTEND_URL}/dashboard/referrals` }]
        ]
      }
    })
  } catch (error) {
    console.error('Referral handler error:', error)
    await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
  }
}
