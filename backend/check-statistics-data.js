const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function checkStatisticsData() {
  try {
    console.log('üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
    
    // –ù–∞–π–¥–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await prisma.user.findFirst();
    if (!user) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }
    
    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.username || user.email} (${user.id})`);
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–æ–¥—É–∫—Ç—ã
    const totalProducts = await prisma.product.count({
      where: { sellerId: user.id }
    });
    
    const activeProducts = await prisma.product.count({
      where: { sellerId: user.id, isActive: true }
    });
    
    console.log(`\nüì¶ –ü—Ä–æ–¥—É–∫—Ç—ã:`);
    console.log(`  –í—Å–µ–≥–æ: ${totalProducts}`);
    console.log(`  –ê–∫—Ç–∏–≤–Ω—ã—Ö: ${activeProducts}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º —Å–¥–µ–ª–∫–∏
    const totalDeals = await prisma.deal.count({
      where: {
        OR: [
          { buyerId: user.id },
          { sellerId: user.id }
        ]
      }
    });
    
    const completedDeals = await prisma.deal.count({
      where: {
        OR: [
          { buyerId: user.id },
          { sellerId: user.id }
        ],
        status: 'COMPLETED'
      }
    });
    
    console.log(`\nü§ù –°–¥–µ–ª–∫–∏:`);
    console.log(`  –í—Å–µ–≥–æ: ${totalDeals}`);
    console.log(`  –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö: ${completedDeals}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    const totalTransactions = await prisma.transaction.count({
      where: { userId: user.id }
    });
    
    const completedTransactions = await prisma.transaction.count({
      where: { 
        userId: user.id,
        status: 'COMPLETED'
      }
    });
    
    const pendingTransactions = await prisma.transaction.count({
      where: { 
        userId: user.id,
        status: 'PENDING'
      }
    });
    
    console.log(`\nüí∞ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:`);
    console.log(`  –í—Å–µ–≥–æ: ${totalTransactions}`);
    console.log(`  –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö: ${completedTransactions}`);
    console.log(`  –û–∂–∏–¥–∞—é—â–∏—Ö: ${pendingTransactions}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –¥–æ—Ö–æ–¥—ã
    const totalRevenue = await prisma.transaction.aggregate({
      where: {
        userId: user.id,
        type: {
          in: ['DEPOSIT', 'COMMISSION', 'REFERRAL', 'CAMPAIGN_PAYMENT']
        },
        status: 'COMPLETED'
      },
      _sum: { amount: true }
    });
    
    const totalSpent = await prisma.transaction.aggregate({
      where: {
        userId: user.id,
        type: {
          in: ['WITHDRAWAL', 'PAYMENT']
        },
        status: 'COMPLETED'
      },
      _sum: { amount: true }
    });
    
    console.log(`\nüíµ –§–∏–Ω–∞–Ω—Å—ã:`);
    console.log(`  –î–æ—Ö–æ–¥—ã: ‚ÇΩ${Number(totalRevenue._sum.amount || 0)}`);
    console.log(`  –†–∞—Å—Ö–æ–¥—ã: ‚ÇΩ${Number(totalSpent._sum.amount || 0)}`);
    console.log(`  –ß–∏—Å—Ç—ã–π –¥–æ—Ö–æ–¥: ‚ÇΩ${Number(totalRevenue._sum.amount || 0) - Number(totalSpent._sum.amount || 0)}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    const totalReferrals = await prisma.user.count({
      where: { referredById: user.id }
    });
    
    const activeReferrals = await prisma.user.count({
      where: { 
        referredById: user.id,
        isActive: true
      }
    });
    
    const referralEarnings = await prisma.transaction.aggregate({
      where: {
        userId: user.id,
        type: 'REFERRAL',
        status: 'COMPLETED'
      },
      _sum: { amount: true }
    });
    
    console.log(`\nüë• –†–µ—Ñ–µ—Ä–∞–ª—ã:`);
    console.log(`  –í—Å–µ–≥–æ: ${totalReferrals}`);
    console.log(`  –ê–∫—Ç–∏–≤–Ω—ã—Ö: ${activeReferrals}`);
    console.log(`  –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ —Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ‚ÇΩ${Number(referralEarnings._sum.amount || 0)}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const hasData = totalProducts > 0 || totalDeals > 0 || totalTransactions > 0 || totalReferrals > 0;
    
    if (hasData) {
      console.log(`\n‚úÖ –í –±–∞–∑–µ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏`);
    } else {
      console.log(`\n‚ùå –í –±–∞–∑–µ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

checkStatisticsData();
