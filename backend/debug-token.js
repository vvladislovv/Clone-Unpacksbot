const axios = require('axios');

async function debugToken() {
  try {
    console.log('üîê –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è...');
    
    const loginResponse = await axios.post('http://localhost:3000/auth/login', {
      identifier: 'user1@test.com',
      password: 'user1123'
    });
    
    const token = loginResponse.data.access_token;
    console.log('‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω:', token.substring(0, 20) + '...');
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\nüë§ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å...');
    
    try {
      const profileResponse = await axios.get('http://localhost:3000/auth/me', {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });
      
      console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—É—á–µ–Ω:', JSON.stringify(profileResponse.data, null, 2));
      
    } catch (profileError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è:', profileError.response?.data || profileError.message);
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...');
    
    try {
      const statsResponse = await axios.get('http://localhost:3000/statistics/user', {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });
      
      console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞:', JSON.stringify(statsResponse.data, null, 2));
      
    } catch (statsError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', statsError.response?.data || statsError.message);
      console.log('–°—Ç–∞—Ç—É—Å:', statsError.response?.status);
      console.log('–ó–∞–≥–æ–ª–æ–≤–∫–∏:', statsError.response?.headers);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
}

debugToken();
