const axios = require('axios');

async function testStatisticsAPI() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const testUsers = [
      { email: 'admin@unpacksbot.com', password: 'admin123' },
      { email: 'test@example.com', password: 'password123' },
      { email: 'user1@test.com', password: 'password123' },
      { email: 'vlad.yelcheninov@gmail.com', password: 'password123' }
    ];
    
    let token = null;
    let userEmail = null;
    
    for (const user of testUsers) {
      try {
        console.log(`üîê –ü—Ä–æ–±—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ ${user.email}...`);
        
        const loginResponse = await axios.post('http://localhost:3000/auth/login', {
          identifier: user.email,
          password: user.password
        });
        
        token = loginResponse.data.access_token;
        userEmail = user.email;
        console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ ${user.email}`);
        break;
        
      } catch (error) {
        console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ ${user.email}: ${error.response?.data?.message || error.message}`);
      }
    }
    
    if (!token) {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –Ω–∏ —Å –æ–¥–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
      return;
    }
    
    // –¢–µ–ø–µ—Ä—å —Ç–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    console.log(`\nüìä –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç /statistics/user –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userEmail}...`);
    
    const statsResponse = await axios.get('http://localhost:3000/statistics/user?period=30d', {
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    });
    
    console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞:');
    console.log(JSON.stringify(statsResponse.data, null, 2));
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
    const stats = statsResponse.data;
    
    console.log('\nüìã –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö:');
    console.log(`- –í—Å–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: ${stats.totalProducts || 0}`);
    console.log(`- –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤: ${stats.activeProducts || 0}`);
    console.log(`- –í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫: ${stats.totalDeals || 0}`);
    console.log(`- –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫: ${stats.completedDeals || 0}`);
    console.log(`- –î–æ—Ö–æ–¥—ã: ‚ÇΩ${stats.totalRevenue || 0}`);
    console.log(`- –†–∞—Å—Ö–æ–¥—ã: ‚ÇΩ${stats.totalSpent || 0}`);
    console.log(`- –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${stats.totalReferrals || 0}`);
    console.log(`- –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ —Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ‚ÇΩ${stats.referralEarnings || 0}`);
    console.log(`- –í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${stats.totalTransactions || 0}`);
    console.log(`- –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${stats.completedTransactions || 0}`);
    console.log(`- –û–∂–∏–¥–∞—é—â–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${stats.pendingTransactions || 0}`);
    console.log(`- –ß–∏—Å—Ç—ã–π –¥–æ—Ö–æ–¥: ‚ÇΩ${stats.netIncome || 0}`);
    console.log(`- –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: ${stats.completionRate || 0}%`);
    console.log(`- –°—Ä–µ–¥–Ω—è—è —Å—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ‚ÇΩ${stats.averageTransactionAmount || 0}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
}

testStatisticsAPI();